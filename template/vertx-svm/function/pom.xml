<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>xyz.jetdrone</groupId>
  <artifactId>openfaas.vertx.svm.function</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <description>OpenFAAS GraalVM native image Fn template</description>

  <profiles>
    <profile>
      <id>native-image</id>
      <build>
        <defaultGoal>package exec:exec</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>exec</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <executable>${java.home}/bin/native-image</executable>
              <arguments>
                <argument>--no-server</argument>
                <argument>--enable-all-security-services</argument>
                <argument>--enable-url-protocols=https</argument>
                <argument>-H:+ReportUnsupportedElementsAtRuntime</argument>
                <argument>--rerun-class-initialization-at-runtime=io.netty.handler.codec.http2.Http2CodecUtil</argument>
                <argument>--delay-class-initialization-to-runtime=io.netty.handler.codec.http.HttpObjectEncoder,io.netty.handler.codec.http2.DefaultHttp2FrameWriter,io.netty.handler.codec.http.websocketx.WebSocket00FrameEncoder,io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator,io.netty.handler.ssl.ReferenceCountedOpenSslEngine</argument>
                <argument>-Dvertx.disableDnsResolver=true</argument>
                <argument>-H:Name=${project.name}</argument>
                <argument>-H:Path=${project.build.directory}</argument>
                <argument>-H:IncludeResources=(META-INF/vertx|META-INF/services|static|webroot|template)/.*</argument>
                <argument>-H:ReflectionConfigurationFiles=${project.basedir}/src/main/svm/reflection.json</argument>
                <argument>-jar</argument>
                <argument>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>xyz.jetdrone</groupId>
      <artifactId>openfaas.vertx.svm.entrypoint</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>xyz.jetdrone.openfaas.vertx.Entrypoint</Main-Class>
                  </manifestEntries>
                </transformer>
              </transformers>
              <artifactSet>
              </artifactSet>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
